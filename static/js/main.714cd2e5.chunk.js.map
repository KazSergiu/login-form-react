{"version":3,"sources":["usersState/user.js","components/LogoutButton.js","pages/Header.js","components/ChartExample.js","pages/HomePage.js","components/LoginForm.js","components/RegisterForm.js","components/LogoutMessage.js","components/HaveAnAccount.js","App.js","redux/store/store.js","index.js"],"names":["userSlice","createSlice","name","initialState","value","id","email","password","confirmPassword","firstName","lastName","logedIn","reducers","register","state","action","payload","login","logout","actions","LogoutButton","dispatch","useDispatch","className","onClick","e","preventDefault","handleLogout","Header","to","ChartExample","bottom","data","labels","datasets","label","backgroundColor","borderWidth","height","width","options","maintainAspectRatio","HomePage","LoginForm","history","useHistory","user","useSelector","onSubmit","loginEmail","loginPassword","push","validate","errors","render","handleSubmit","input","meta","cascade","type","placeholder","required","touched","error","RegisterForm","Logout","HaveAnAccount","App","exact","path","LogoutMessage","store","configureStore","reducer","userReducer","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.714cd2e5.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialStateValue = {\r\n  id: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  confirmPassword: \"\",\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  logedIn: false,\r\n};\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    value: initialStateValue,\r\n  },\r\n  reducers: {\r\n    register: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n    login: (state) => {\r\n      state.value.logedIn = true;\r\n    },\r\n    logout: (state) => {\r\n      state.value.logedIn = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { register, logout, login } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logout } from \"../usersState/user\";\r\n\r\nconst LogoutButton = () => {\r\n  const dispatch = useDispatch();\r\n  const handleLogout = (e) => {\r\n    e.preventDefault();\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <div className=\"logout-container\">\r\n      <button\r\n        onClick={(e) => {\r\n          handleLogout(e);\r\n        }}\r\n      >\r\n        Log out\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogoutButton;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LogoutButton from \"../components/LogoutButton\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"nav-container\">\r\n      <nav>\r\n        <h1>Qoobus</h1>\r\n        <div className=\"links-container\">\r\n          <Link to=\"/\">Home</Link>\r\n          <Link to=\"register-page\">Create an Account</Link>\r\n          <Link to=\"login-page\">Log In</Link>\r\n          <LogoutButton />\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { PolarArea } from \"react-chartjs-2\";\r\nimport Zoom from \"react-reveal/Zoom\";\r\n\r\nconst ChartExample = () => {\r\n  const data = {\r\n    labels: [\"Facebook\", \"Twitter\", \"Instagram\", \"Telegram\", \"Viber\", \"VK\"],\r\n    datasets: [\r\n      {\r\n        label: \"Social Media Users\",\r\n        data: [1200000, 1100000, 100000, 696644, 1313111, 351653],\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132, 0.5)\",\r\n          \"rgba(54, 162, 235, 0.5)\",\r\n          \"rgba(255, 206, 86, 0.5)\",\r\n          \"rgba(75, 192, 192, 0.5)\",\r\n          \"rgba(153, 102, 255, 0.5)\",\r\n          \"rgba(255, 159, 64, 0.5)\",\r\n        ],\r\n        borderWidth: 1,\r\n        height: 500,\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <div>\r\n      <Zoom bottom>\r\n        <PolarArea\r\n          data={data}\r\n          width={600}\r\n          height={600}\r\n          options={{ maintainAspectRatio: false }}\r\n        />\r\n      </Zoom>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartExample;\r\n","import React from \"react\";\r\nimport ChartExample from \"../components/ChartExample\";\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div className=\"chart-container\">\r\n      <h1>Social Media Users</h1>\r\n      <ChartExample/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport Flip from \"react-reveal/Flip\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { login } from \"../usersState/user\";\r\n\r\nconst LoginForm = () => {\r\n  \r\n  const history = useHistory();\r\n  const user = useSelector((state) => state.user.value);\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (e) => {\r\n    if (user.email === e.loginEmail && user.password === e.loginPassword) {\r\n      dispatch(\r\n        login({\r\n          logedIn: true,\r\n        })\r\n      );\r\n    } else {\r\n      return;\r\n    }\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const validate = (e) => {\r\n    const errors = {};\r\n    if (!e.loginEmail) {\r\n      errors.loginEmail = \"Enter Email\";\r\n    } else if (user.email !== e.loginEmail) {\r\n      errors.loginEmail = \"Enter Valid Email\";\r\n    }\r\n    if (!e.loginPassword) {\r\n      errors.loginPassword = \"Enter Password\";\r\n    } else if (user.password !== e.loginPassword) {\r\n      errors.loginPassword = \"Enter Valid Password\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-form-container\">\r\n        <Form\r\n          onSubmit={onSubmit}\r\n          validate={validate}\r\n          render={({ handleSubmit }) => (\r\n            <form onSubmit={handleSubmit}>\r\n              <h2>Log In</h2>\r\n              <div className=\"inputs-container\">\r\n                <Field name=\"loginEmail\">\r\n                  {({ input, meta }) => (\r\n                    <Flip bottom cascade>\r\n                      <div className=\"input-block\">\r\n                        <label>Email</label>\r\n                        <input\r\n                          type=\"email\"\r\n                          {...input}\r\n                          placeholder=\"Enter Email\"\r\n                          required\r\n                        />\r\n                        {meta.touched && meta.error && <p>{meta.error}</p>}\r\n                      </div>\r\n                    </Flip>\r\n                  )}\r\n                </Field>\r\n\r\n                <Field name=\"loginPassword\">\r\n                  {({ input, meta }) => (\r\n                    <Flip bottom cascade>\r\n                      <div className=\"input-block\">\r\n                        <label>Password</label>\r\n                        <input\r\n                          type=\"password\"\r\n                          {...input}\r\n                          placeholder=\"Enter Password\"\r\n                          required\r\n                        />\r\n                        {meta.touched && meta.error && <p>{meta.error}</p>}\r\n                      </div>\r\n                    </Flip>\r\n                  )}\r\n                </Field>\r\n              </div>\r\n              <button type=\"submit\">Sign In</button>\r\n            </form>\r\n          )}\r\n        />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport Flip from \"react-reveal/Flip\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { register } from \"../usersState/user\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst RegisterForm = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (e) => {\r\n    dispatch(\r\n      register({\r\n        email: e.email,\r\n        password: e.password,\r\n        confirmPassword: e.confirmPassword,\r\n        firstName: e.firstName,\r\n        lastName: e.lastName,\r\n      })\r\n    );\r\n    history.push(\"/login-page\");\r\n  };\r\n\r\n  const validate = (e) => {\r\n    const errors = {};\r\n    if (!e.email) {\r\n      errors.email = \"Enter Email\";\r\n    }\r\n    if (!e.password) {\r\n      errors.password = \"Enter Password\";\r\n    }\r\n    if (!e.confirmPassword) {\r\n      errors.confirmPassword = \"Confirm Password\";\r\n    }\r\n    if (e.password && e.password !== e.confirmPassword) {\r\n      errors.confirmPassword = \"Passwords don't match\";\r\n    }\r\n    if (!e.firstName) {\r\n      errors.firstName = \"Enter First Name\";\r\n    }\r\n    if (!e.lastName) {\r\n      errors.lastName = \"Enter Last Name\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-form-container\">\r\n      <Form\r\n        onSubmit={onSubmit}\r\n        validate={validate}\r\n        render={({ handleSubmit }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <h2>Please fill in this form to create an account</h2>\r\n            <div className=\"inputs-container\">\r\n              <Field name=\"email\">\r\n                {({ input, meta }) => (\r\n                  <Flip bottom cascade>\r\n                    <div className=\"input-block\">\r\n                      <label>Email</label>\r\n                      <input\r\n                        type=\"email\"\r\n                        {...input}\r\n                        placeholder=\"Enter Email\"\r\n                        required\r\n                      />\r\n                      {meta.touched && meta.error && <p>{meta.error}</p>}\r\n                    </div>\r\n                  </Flip>\r\n                )}\r\n              </Field>\r\n\r\n              <Field name=\"password\">\r\n                {({ input, meta }) => (\r\n                  <Flip bottom cascade>\r\n                    <div className=\"input-block\">\r\n                      <label>Password</label>\r\n                      <input\r\n                        type=\"password\"\r\n                        {...input}\r\n                        placeholder=\"Enter Password\"\r\n                        required\r\n                      />\r\n                      {meta.touched && meta.error && <p>{meta.error}</p>}\r\n                    </div>\r\n                  </Flip>\r\n                )}\r\n              </Field>\r\n\r\n              <Field name=\"confirmPassword\">\r\n                {({ input, meta }) => (\r\n                  <Flip bottom cascade>\r\n                    <div className=\"input-block\">\r\n                      <label>Confirm Password</label>\r\n                      <input\r\n                        type=\"password\"\r\n                        {...input}\r\n                        placeholder=\"Confirm Password\"\r\n                        required\r\n                      />\r\n                      {meta.touched && meta.error && <p>{meta.error}</p>}\r\n                    </div>\r\n                  </Flip>\r\n                )}\r\n              </Field>\r\n\r\n              <Field name=\"firstName\">\r\n                {({ input, meta }) => (\r\n                  <Flip bottom cascade>\r\n                    <div className=\"input-block\">\r\n                      <label>First Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        {...input}\r\n                        placeholder=\"First Name\"\r\n                        required\r\n                      />\r\n                      {meta.touched && meta.error && <p>{meta.error}</p>}\r\n                    </div>\r\n                  </Flip>\r\n                )}\r\n              </Field>\r\n\r\n              <Field name=\"lastName\">\r\n                {({ input, meta }) => (\r\n                  <Flip bottom cascade>\r\n                    <div className=\"input-block\">\r\n                      <label>Last Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        {...input}\r\n                        placeholder=\"Last Name\"\r\n                        required\r\n                      />\r\n                      {meta.touched && meta.error && <p>{meta.error}</p>}\r\n                    </div>\r\n                  </Flip>\r\n                )}\r\n              </Field>\r\n            </div>\r\n            <button type=\"submit\">Register</button>\r\n          </form>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport LogoutButton from \"./LogoutButton\";\r\n\r\nconst Logout = () => {\r\n  const user = useSelector((state) => state.user.value);\r\n\r\n  return (\r\n    <div className=\"logout-container\">\r\n      <h1>Welcome {user.firstName}!</h1>\r\n      <LogoutButton/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logout;\r\n","import React from \"react\";\r\n\r\nconst HaveAnAccount = () => {\r\n  return (\r\n    <div className=\"have-account\">\r\n      <h1>You already have an account!</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HaveAnAccount;\r\n","import React from \"react\";\r\nimport Header from \"./pages/Header\";\r\nimport HomePage from \"./pages/HomePage\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport LoginForm from \"./components/LoginForm\";\r\nimport RegisterForm from \"./components/RegisterForm\";\r\nimport LogoutMessage from \"./components/LogoutMessage\";\r\nimport { useSelector } from \"react-redux\";\r\nimport HaveAnAccount from \"./components/HaveAnAccount\";\r\n\r\nconst App = () => {\r\n  const user = useSelector((state) => state.user.value);\r\n\r\n  return (\r\n    <Router>\r\n      <main className=\"general-contanier\">\r\n        <Header />\r\n        <div className=\"content\">\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <HomePage />\r\n            </Route>\r\n            <Route path=\"/register-page\">\r\n              {!user.logedIn ? <RegisterForm /> : <HaveAnAccount />}\r\n            </Route>\r\n            <Route path=\"/login-page\">\r\n              {!user.logedIn ? <LoginForm /> : <LogoutMessage />}\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </main>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport userReducer from \"../../usersState/user\";\r\n\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./redux/store/store\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}